knitr::opts_chunk$set(echo = TRUE)
plot(CO2_modI, pages=1)
AIC_table <- AIC(CO2_modG,CO2_modGS, CO2_modGI, CO2_modS, CO2_modI)%>%
rownames_to_column(var= "Model")%>%
group_by(data_source)%>%
mutate(deltaAIC = AIC - min(AIC))%>%
ungroup()
AIC_table <- AIC(CO2_modG,CO2_modGS, CO2_modGI, CO2_modS, CO2_modI)%>%
rownames_to_column(var= "Model")%>%
mutate(deltaAIC = AIC - min(AIC))%>%
ungroup()
library(tidyverse)
plot(CO2_modG, page=1)
CO2_modG <- gam(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, method="REML", family="gaussian")
library(mgcv)
library(gamm4)
library(gamair)
library(MASS)
library(lme4)
library(lattice)
library(knitr)
library(datasets)
library(tidyverse)
#Loading simulated bird movement data
#The default CO2 plant variable is ordered;
data(CO2)
CO2 <- transform(CO2, Plant_uo=factor(Plant, ordered=FALSE))
CO2_vis_plot <- ggplot(CO2, aes(x=conc,
y=uptake,
group=Plant,
color=Plant,
lty=Plant)) +
geom_point() +
geom_line() +
scale_color_manual(values = rep(c("red","blue","black"), times =4))+
scale_linetype_manual(values = rep(1:4, each=3))+
guides(color="none",linetype="none")+
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
print(CO2_vis_plot)
CO2_modG <- gam(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, method="REML", family="gaussian")
plot(CO2_modG, page=1)
# setup prediction data
CO2_modG_pred <- with(CO2,
expand.grid(conc=seq(min(conc), max(conc), length=100),
Plant_uo=levels(Plant_uo)))
# make the prediction, add this and a column of standard errors to the prediction
# data.frame. Predictions are on the log scale.
CO2_modG_pred <- cbind(CO2_modG_pred,
predict(CO2_modG,
CO2_modG_pred,
se.fit=TRUE,
type="response"))
# CO2_modG_pred <- cbind(CO2_modG_pred,
#                        predict(CO2_modG,
#                                CO2_modG_pred,
#                                se.fit=TRUE,
#                                type="terms"))
# make the plot. Note here the use of the exp() function to back-transform the
# predictions (which are for log-uptake) to the original scale
ggplot(data=CO2, aes(x=conc, y=uptake, group=Plant_uo, color=Plant_uo)) +
# facet_wrap(~Plant_uo) +
geom_ribbon(aes(ymin=exp(fit - 2*se.fit), ymax=exp(fit + 2*se.fit), x=conc, fill=Plant_uo, group=Plant_uo),
data=CO2_modG_pred,
alpha=0.1,
inherit.aes=FALSE) +
geom_line(aes(y=exp(fit)), data=CO2_modG_pred) +
geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))+
theme_classic()+
ggtitle("RAndom effects: model with a Global smoother only")
CO2_modGS <- gam(log(uptake) ~ s(log(conc), k=5, m=2) +
s(log(conc), Plant_uo, k=5,  bs="fs", m=2),
data=CO2, method="REML")
# setup prediction data
CO2_modGS_pred <- with(CO2,
expand.grid(conc=seq(min(conc), max(conc), length=100),
Plant_uo=levels(Plant_uo)))
CO2_modGS_pred <- cbind(CO2_modGS_pred,
predict(CO2_modGS,
CO2_modGS_pred,
se.fit=TRUE,
type="response"))
# CO2 <- transform(CO2,
# modGS = CO2_modGS_pred$fit,
# modGS_se = CO2_modGS_pred$se.fit)
plot(CO2_modGS, page=1)
ggplot(data=CO2, aes(x=conc, y=uptake, group=Plant_uo, color=Plant_uo)) +
# facet_wrap(~Plant_uo) +
geom_ribbon(aes(ymin=exp(fit - 2*se.fit), ymax=exp(fit + 2*se.fit), x=conc, fill=Plant_uo, group=Plant_uo),
data=CO2_modGS_pred,
alpha=0.1,
inherit.aes=FALSE) +
geom_line(aes(y=exp(fit)), data=CO2_modGS_pred) +
geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
# ggtittle("A global smoother plus group-level smoothers that have the same wiggliness")
CO2_modGI <- gam(log(uptake) ~ s(log(conc), k=5, m=2, bs="tp") +
s(log(conc), by= Plant_uo, k=5, m=1, bs="tp") +
s(Plant_uo, bs="re", k=12),
data=CO2, method="REML")
# make the prediction, add this and a column of standard errors to the prediction
# data.frame. Predictions are on the log scale.
# setup prediction data
CO2_modGI_pred <- with(CO2,
expand.grid(conc=seq(min(conc), max(conc), length=100),
Plant_uo=levels(Plant_uo)))
CO2_modGI_pred <- cbind(CO2_modGI_pred,
predict(CO2_modGI,
CO2_modGI_pred,
se.fit=TRUE,
type="response"))
plot(CO2_modGI, page=1)
ggplot(data=CO2, aes(x=conc, y=uptake, group=Plant_uo, color=Plant_uo)) +
# facet_wrap(~Plant_uo) +
geom_ribbon(aes(ymin=exp(fit - 2*se.fit), ymax=exp(fit + 2*se.fit), x=conc, fill=Plant_uo, group=Plant_uo),
data=CO2_modGI_pred,
alpha=0.1,
inherit.aes=FALSE) +
geom_line(aes(y=exp(fit)), data=CO2_modGI_pred) +
geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
plot(CO2_modS, pages=1)
CO2_modS <- gam(log(uptake) ~ s(log(conc), Plant_uo, k=5, bs="fs", m=2),
data=CO2, method="REML")
# setup prediction data
CO2_modS_pred <- with(CO2,
expand.grid(conc=seq(min(conc), max(conc), length=100),
Plant_uo=levels(Plant_uo)))
CO2_modS_pred <- cbind(CO2_modS_pred,
predict(CO2_modS,
CO2_modS_pred,
se.fit=TRUE,
type="response"))
plot(CO2_modS, pages=1)
ggplot(data=CO2, aes(x=conc, y=uptake, group=Plant_uo, color=Plant_uo)) +
# facet_wrap(~Plant_uo) +
geom_ribbon(aes(ymin=exp(fit - 2*se.fit), ymax=exp(fit + 2*se.fit), x=conc, fill=Plant_uo, group=Plant_uo),
data=CO2_modS_pred,
alpha=0.1,
inherit.aes=FALSE) +
geom_line(aes(y=exp(fit)), data=CO2_modS_pred) +
geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
CO2_modI <- gam(log(uptake) ~ s(log(conc), by=Plant_uo, k=5, bs="tp", m=2) +
s(Plant_uo, bs="re", k=12),
data=CO2, method="REML")
# setup prediction data
CO2_modI_pred <- with(CO2,
expand.grid(conc=seq(min(conc), max(conc), length=100),
Plant_uo=levels(Plant_uo)))
CO2_modI_pred <- cbind(CO2_modI_pred,
predict(CO2_modI,
CO2_modI_pred,
se.fit=TRUE,
type="response"))
plot(CO2_modI, pages=1)
ggplot(data=CO2, aes(x=conc, y=uptake, group=Plant_uo, color=Plant_uo)) +
# facet_wrap(~Plant_uo) +
geom_ribbon(aes(ymin=exp(fit - 2*se.fit), ymax=exp(fit + 2*se.fit), x=conc, fill=Plant_uo, group=Plant_uo),
data=CO2_modI_pred,
alpha=0.1,
inherit.aes=FALSE) +
geom_line(aes(y=exp(fit)), data=CO2_modI_pred) +
geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
AIC_table <- AIC(CO2_modG,CO2_modGS, CO2_modGI, CO2_modS, CO2_modI)%>%
rownames_to_column(var= "Model")%>%
mutate(data_source = rep(c("CO2"), each =5))%>%
group_by(data_source)%>%
mutate(deltaAIC = AIC - min(AIC))%>%
ungroup()
AIC_table
kable(AIC_table)
AIC_table
kable(AIC_table[,1:5])
library(png)
knitr::opts_chunk$set(echo = TRUE)
plot(CO2_modG, page=1)
plot(CO2_modGS, page=1)
plot(CO2_modGI, page=1)
plot(CO2_modGI, page=1)
plot(CO2_modGI, page=1)
plot(CO2_modGI, page=1)
plot(CO2_modGS, page=1)
plot(CO2_modGS, page=1)
plot(CO2_modG, page=1)
plot(CO2_modGS, page=1)
plot(CO2_modGI, page=1)
plot(CO2_modS, pages=1)
plot(CO2_modS, pages=1)
plot(CO2_modI, pages=1)
plot(CO2_modI, pages=1)
plot(CO2_modI, pages=1)
AIC_table <- AIC(CO2_modG,CO2_modGS, CO2_modGI, CO2_modS, CO2_modI)%>%
rownames_to_column(var= "Model")%>%
mutate(data_source = rep(c("CO2"), each =5))%>%
group_by(data_source)%>%
mutate(deltaAIC = AIC - min(AIC))%>%
ungroup()
CO2_modG_pred$modType<-"G"
CO2_modGS_pred$modType<-"GS"
CO2_modGI_pred$modType<-"GI"
CO2_modS_pred$modType<-"S"
CO2_modI_pred$modType<-"I"
pred<-rbind(CO2_modG_pred, CO2_modGS_pred, CO2_modGI_pred, CO2_modS_pred, CO2_modI_pred)
ggplot(data=pred, aes(x=conc, y=exp(fit), group=modType, color=modType)) +
facet_wrap(~Plant_uo) +
geom_line() +
# geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
CO2_modG_pred$modType<-"G"
CO2_modGS_pred$modType<-"GS"
CO2_modGI_pred$modType<-"GI"
CO2_modS_pred$modType<-"S"
CO2_modI_pred$modType<-"I"
pred<-rbind(CO2_modG_pred, CO2_modGS_pred, CO2_modGI_pred, CO2_modS_pred, CO2_modI_pred)
ggplot(data=pred, aes(x=conc, y=exp(fit), group=modType, color=modType)) +
facet_wrap(~Plant_uo) +
geom_line() +
# geom_point() +
labs(x=expression(CO[2] ~ concentration ~ (mL ~ L^{-1})),
y=expression(CO[2] ~ uptake ~ (mu*mol ~ m^{-2})))
summary(CO2_modI)
check.gam(CO2_modI)
choose.gam(CO2_modI)
gam.check(CO2_modI)
CO2_modI$dispersion
CO2_modI$scale
CO2_modI$edf
gam.check(CO2_modI)
CO2_modG <- gamm(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, method="REML", family="gaussian")
library(mgcv)
CO2_modG <- gamm(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, method="REML", family="gaussian")
CO2_modG.gamm <- gamm(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, method="REML", family="gaussian")
plot(CO2_modG.gamm )
CO2_modG.gamm <- gamm(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, method="REML", family="gaussian")
plot(CO2_modG.gamm)
CO2_modG.gamm <- gamm(log(uptake) ~ s(log(conc), k=5, bs="tp") +
s(Plant_uo, k=12, bs="re"),
data=CO2, family="gaussian")
CO2_modG.gamm
plot(CO2_modG.gamm)
CO2_modG.gamm <- gamm(log(uptake) ~ s(log(conc), k=5) +
s(Plant_uo, k=12, bs="re"),
data=CO2, family="gaussian")
plot(CO2_modG.gamm)
CO2_modGI <- gam(log(uptake) ~ s(log(conc), k=5, m=2, bs="tp") +
s(log(conc), by= Plant_uo, k=5, m=1, bs="tp") +
s(Plant_uo, bs="re", k=12),
data=CO2, method="REML")
gam.check(CO2_modGI)
qq.gam(CO2_modGI))
qq.gam(CO2_modGI)
gam.check(CO2_modGI)
library(mgcViz)
install.packages("mgcViz")
install.packages("mgcViz")
install.packages("mgcViz")
install.packages("mgcViz")
Yes
library(mgcViz)
install.packages("mgcViz")
install.packages("mgcViz")
library(mgcViz)
knitr::opts_chunk$set(echo = TRUE)
getViz(b)
qq.gam(CO2_modGI)
